 <!-- JavaBean 实现 序列化 接口 -->
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin">
        </plugin>
        <!-- genenat entity时,生成toString -->
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin" />
        <!-- 自定义物理分页  可生成支持Mysql数据的limit  不支持Oracle -->
        <plugin type="org.mybatis.generator.plugins.page.PaginationPlugin" />
        <!-- 自定义查询指定字段  -->
        <plugin type="org.mybatis.generator.plugins.field.FieldsPlugin" />
        <!-- 开启支持内存分页   可生成 支持内存分布的方法及参数  
        <plugin type="org.mybatis.generator.plugins.RowBoundsPlugin" />
        -->
        <!-- generate entity时，生成hashcode和equals方法
        <plugin type="org.mybatis.generator.plugins.EqualsHashCodePlugin" />
         -->
        <!-- 此处是将Example改名为Criteria 当然 想改成什么都行~    -->      
        <plugin type="org.mybatis.generator.plugins.RenameExampleClassPlugin">  
            <property name="searchString" value="Example$" />
            <!-- 替换后
            <property name="replaceString" value="Criteria" />  
             -->
            <property name="replaceString" value="Query" />
        </plugin>  
        <!-- 此处是将UserMapper.xml改名为UserDao.xml 当然 想改成什么都行~ -->        
        <plugin type="org.mybatis.generator.plugins.rename.RenameSqlMapperPlugin">  
            <property name="searchString" value="Mapper" />
            <property name="replaceString" value="Dao" />
        </plugin>  
         
        <!-- 此处是将UserMapper改名为UserDao 接口 当然 想改成什么都行~  -->        
        <plugin type="org.mybatis.generator.plugins.rename.RenameJavaMapperPlugin">  
            <property name="searchString" value="Mapper$" />
            <property name="replaceString" value="Dao" />
        </plugin>  
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        <context id="testTable" targetRuntime="MyBatis3">
	
	    <!-- JavaBean 实现 序列化 接口 -->
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin">
         </plugin>
		<commentGenerator>
			<!-- 是否去除自动生成的注释 true : 是 false:否 -->
			<property name="suppressAllComments" value="true" />
		</commentGenerator>
		<!-- 数据库连接的信息： 驱动类， 连接地址 ， 用户名 ， 密码 -->
		<jdbcConnection
			driverClass="com.mysql.jdbc.jdbc.Driver"
			connectionURL="jdbc:mysql://localhost:3306/mybatis_test"
			userId="root" password="admin">
		</jdbcConnection>

		<!-- 默认false ，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer,为true时解析为 java.math.BigDecimal -->
		<javaTypeResolver>
			<property name="forceBigDecimals" value="false"></property>
		</javaTypeResolver>

		<!--targetProject: 生成PO类的位置 -->
		<javaModelGenerator targetPackage="cn.com.sm.po"
			targetProject=".\src">
			<!--enableSubPackages : 是否让 schema 作为包的后缀 -->
			<property name="enableSubPackages" value="false" />
			<!--从数据库返回的值被清理前后的空格 -->
			<property name="trimStrings" value="true" />
		</javaModelGenerator>


		<!--targetProject:mapper 映射文件生成的位置 -->
		<sqlMapGenertrator targetPackage="cn.com.sm.mapper"
			targetProject=".\src">
			<!--enbleSubpackagens: 是否让schema 作为包的后缀 -->
			<property name="enableSubPackagent" value="false" />
		</sqlMapGenertrator>


		<!--enableSubPackagen: mapper 接口生成的位置 -->
		<JavaClientGenerator type="XMLMAPPER"
			targetPackage="cn.com.sm.mapper" targetProject=".\src">
			<property name="enableSubPackages" value="false" />
		</JavaClientGenerator>

		<!--指定数据库表 -->
		<table tableName="user"></table>

	</context>